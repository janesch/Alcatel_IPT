// Policy Name: TPR_event_enrichment
// 
// Version    Date        Name        Description
// 1.0        14-09-10    -        Baseline
// 1.1        14-09-10    Tony Nisbet    Capture ServerSerial with logging (patch 4.22)
// 1.2          06-03-12    Nick Evans    WP190 IPT Transponder enrichment requires
log("TPR_event_enrichment : started");
log("TPR_event_enrichment: IQLOGSTART: ServerSerial=" + @ServerSerial + " EventId=" + @EventId);
// Section to generate an event in the ObjectServer if we can't talk to Circee
Handle java.lang.Exception
{
    // Changed under Patch 3.105 on 23 June 2009
    //if((ErrorMessage LIKE "Could not connect to databases") OR (ErrorMessage LIKE "JDBC Connection Pool could not connect to either data source"))
    if (ErrorMessage LIKE "JDBC Connection Pool could not connect to either data source")
    {
        MyErrorMessage = "JDBC Connection Pool could not connect to either data source";
    }
    elseif(ErrorMessage LIKE "Could not connect to databases") 
    {
        MyErrorMessage = "Could not connect to databases";
    }
    if((ErrorMessage LIKE "Could not connect to databases") OR (ErrorMessage LIKE "JDBC Connection Pool could not  connect to either data source"))
    {
        Log("My error occured in policy: " + ErrorMessage);
        objNewEvent = NewObject();
        objNewEvent.ClearTime = 0;
        objNewEvent.FirstRaiseTime = GetDate();
        objNewEvent.LastRaiseTime = GetDate();
        // Changed Manager by TA, Patch 3.105
        //objNewEvent.Manager = 'Impact';
        objNewEvent.Manager = 'Netcool Impact';
        objNewEvent.Severity = 5;
        objNewEvent.FirstOccurrence = GetDate();
        objNewEvent.LastOccurrence = GetDate();
        objNewEvent.Type = 1;
        // Changed ParentChildFlag and ImpactFlag by TA, Patch 3.105
        //objNewEvent.ParentChildFlag = 100;
        objNewEvent.ParentChildFlag = 8;
        //objNewEvent.ImpactFlag = 100;
        objNewEvent.ImpactFlag = 1;
        objNewEvent.Flash = 1;
        objNewEvent.Node = "Circee Database";
        // Added OwnerUID on 24022009 by sk, patch-3.50.1
        objNewEvent.OwnerUID = 65534;
        // Added TTFlag, ActionRequired and ExpireTime by TA, Patch 3.105
        objNewEvent.TTFlag = 1;
        objNewEvent.ActionRequired = 1;
        objNewEvent.ExpireTime = 259200;
        objNewEvent.AlertGroup = "Database Unavailable";
        // Changed Identifier by TA, Patch 3.105
        //objNewEvent.Identifier = "Circee_Database_Unavailable - error " + ErrorMessage;
        objNewEvent.Identifier = "Circee_Database_Unavailable - error " + MyErrorMessage;
        objNewEvent.Summary = "Circee Database unavailable from Impact " + ErrorMessage;
        objMyEvent = AddDataItem('ha_ncoms_impact_events', objNewEvent);
    }
}
// Set the ImpactFlag to processing
@ImpactFlag = 4;
ReturnEvent(EventContainer);
if (@Manager != 'IPTNEM')
{
    // check if event is from a responder, EquipmentType = 'RES'
    if (@EquipmentType = 'RES')
    {
        EnrichmentOrgNodes = GetByFilter('Circee_Host_Table', "(SYSNAME like '"+@NodeAlias+"%') and (EQUIP_TYPE = 'TR')", false);
    }
    // the event must be from a transponder if it isn't from a responder
    else
    {
        EnrichmentOrgNodes = GetByFilter('Circee_Host_Table', "(ASSET_ELECTRONIC_ADDRESS='"+@NodeAlias+"') and (EQUIP_TYPE in ('TPR','ST'))", false);
    }
}
else 
{
    EnrichmentOrgNodes = GetByFilter('Circee_Host_Table', "(SYSNAME like '"+@Node+"%')", false);
}
Num = length(EnrichmentOrgNodes); 
log("TPR_event_enrichment : " + EventContainer.Node + " is the Node ");
log("TPR_event_enrichment : Filter was (ASSET_ELECTRONIC_ADDRESS='"+@NodeAlias+"') and (EQUIP_TYPE in ('TPR','ST'))");
log("TPR_event_enrichment : GetByFilter successful. Found "+Num+" dataItem(s)."); 
If (Num > 0) 
{
    if(@SDPLocation = '')
    {
        @SDPLocation = ''+ EnrichmentOrgNodes[0].SDP_LOCATION;
    }
    if(@ServiceType = '')
    {
        @ServiceType = '' + EnrichmentOrgNodes[0].SERVICE_TYPE_ID;
    }
    if (@ServiceType like "^[0-9]+.*")
    {
        if(@ServiceCategory = '')
        {
            @ServiceCategory = RExtract(@ServiceType, "^([0-9]+).*");
        }
    }
    if(@TSA = '')
    {
        @TSA = '' + EnrichmentOrgNodes[0].TS_A;
    }
    if(@TSB = '')
    {
        @TSB = '' + EnrichmentOrgNodes[0].TS_B;
    }
    if(@AssetElectronicAddress = '')
    {
        @AssetElectronicAddress = '' + EnrichmentOrgNodes[0].ASSET_ELECTRONIC_ADDRESS;
    }
    /// these asset fields were missing ....
    if(@AssetBarCode = '')
    {
        @AssetBarCode = EnrichmentOrgNodes[0].ASSET_BARCODE_NO;
    }
    if(@AssetCategory = '')
    {
        @AssetCategory = EnrichmentOrgNodes[0].CATEGORY_ABBR;
    }
    if(@AssetID = '')
    {
        @AssetID = EnrichmentOrgNodes[0].ASSET_ID;
    }
    if(@AssetMotorway = '')
    {
        @AssetMotorway = EnrichmentOrgNodes[0].MOTORWAY_REF;
    }
    if(@AssetType = '')
    {
        @AssetType = EnrichmentOrgNodes[0].TYPE_ABBR;
    }
    if(@AssetVariant = '')
    {
        @AssetVariant = EnrichmentOrgNodes[0].VARIANT_ABBR;
    }
    if(@AssetGeographicalAddress = '')
    {
        @AssetGeographicalAddress = EnrichmentOrgNodes[0].ASSET_GEOG_ADDRESS;
    }
    if(@AssetElectronicAddress = '')
    {
        @AssetElectronicAddress = EnrichmentOrgNodes[0].ASSET_ELECTRONIC_ADDRESS;
    }
    if(@RCCArea = '')
    {
        @RCCArea = EnrichmentOrgNodes[0].RCC_AREA_ABBR;
    }
    if(@InServiceStatus = '')
    {
        @InServiceStatus = EnrichmentOrgNodes[0].ASSET_STATUS_DESC;
    }
    //if(@InServiceStatus = 'Planned')
    if(@InServiceStatus = 'In Service - Planned Outage')
    {
        if(@PlannedOutageFlag = 0)
        {
            @PlannedOutageFlag = 1;
        }
    }
      
    //NE 06-02-2012 Added for WP190 to support STI Calculations and synthetic event generation
    if(@Manager = 'IPTNEM')
    {
        Activate(NULL, 'IPT_TPR_event_enrichment');
    }
    else
    {
        // We have an electronic address so lookup STIRef
        Filter = "ASSET_ELECTRONIC_ADDRESS = '"+@AssetElectronicAddress+"'";
        EndOrgNodes = GetByFilter('Circee_Asset_STI_Table', Filter, false);
        EndNum = length(EndOrgNodes); 
        If ( EndNum > 0 ) 
        {
            // Create array of STIs from EndOrgNodes
            EndOrgSTIs = 
            {
            }
            ;
            a = 0;
            while (a < EndNum)
            {
                EndOrgSTIs = EndOrgSTIs + EndOrgNodes[a].STI_ID;
                a = a + 1;
            }
            // Create distinct array of the STI IDs
            DistinctSTIs = distinct(EndOrgSTIs);
            NumDistinct = length(DistinctSTIs);
            log("TPR_event_enrichment : STIRef " + EndOrgNodes[0].STI_ID );
            log("TPR_event_enrichment : distinct STIRef " + DistinctSTIs[0] );
            // Now build up a comma separated list of them
            @STINum = NumDistinct ;
            if(@STIRef = '')
            {
                @STIRef = '' + DistinctSTIs[0];
                a = 1;
                while (a < NumDistinct )
                {
                    @STIRef = @STIRef + "," + DistinctSTIs[a];
                    a = a + 1;
                }
            }
            log("enddevice_event_enrichment: Find highest impact STI value");
            if(@STI_HA_Impact = 0)
            {
                Delimiter = ",";    
                STI_HA_Array = Split(EndOrgNodes[0].STI_Impact, Delimiter);
                numSTIs = length(STI_HA_Array);
                if(numSTIs > 0)
                {
                    b = 0;
                    highestSTI = 0;
                    while (b < numSTIs)
                    {
                        if(int(STI_HA_Array[b]) > highestSTI)
                        {
                            highestSTI = int(STI_HA_Array[b]);
                        }
                        b = b + 1;
                    }
                }
                @STI_HA_Impact = highestSTI;
            }
        }
        Else 
        {
            log("TPR_event_enrichment : STIRef Not Found");
            if(@STIRef = '')
            {
                @STIRef = 'Not found';
                @STINum = 0;
                @STI_HA_Impact = 1;
            }
        }
        if(@AssetGeographicAddress = '')
        {
            @AssetGeographicAddress = '' + EnrichmentOrgNodes[0].ASSET_GEOG_ADDRESS;
        }
        if(@AssetMotorway = '')
        {
            @AssetMotorway = '' + EnrichmentOrgNodes[0].MOTORWAY_REF;
        }
        // set TPRLocation
        if(@TPRLocation = '')
        {
            @TPRLocation = @AssetMotorway +"/"+@AssetGeographicAddress;
        }
        // We have a geographic address so lookup span chain if the device is not a responder
        if(@EquipmentType <> 'RES')
        {
            //Filter condition changed under patch 3.94
            //Filter = "TPR='"+@AssetMotorway+"/"+@AssetGeographicAddress+"'";
            Filter = "ELECTRONIC_ADDRESS='"+ @AssetElectronicAddress + "'";
            EndOrgNodes = GetByFilter('Reporter_SpanChain', Filter, false);
            EndNum = length(EndOrgNodes); 
            If ( EndNum > 0 )
            {
                log("TPR_event_enrichment : SpanChain " + EndOrgNodes[0].STI_ID );
                if(@SpanChain = '')
                {
                    @SpanChain = ''+ EndOrgNodes[0].SPAN_CHAIN;
                }
            }
            Else
            {
                log("TPR_event_enrichment : SpanChain Not Found");
                if(@SpanChain = '')
                {
                    @SpanChain = 'Not found';
                }
            }
        }
        @ImpactFlag = 2;
    }
}
Else 
{
    log("TPR_event_enrichment : data not found");
    if(@STIRef = '')
    {
        @STIRef = 'Unknown';
        @STI_ID = 'Unknown';
    }
    //@STINum = 0;
    //@EndDeviceNum = 0;
    if(@SDPLocation = '')
    {
        @SDPLocation = 'Unknown';
    }
    if(@ServiceType = '')
    {
        @ServiceType = 'Unknown';
    }
    if(@ServiceCategory = '')
    {
        @ServiceCategory = 'Unknown';
    }
    if(@TSA = '')
    {
        @TSA = 'Unknown';
    }
    if(@SpanChain = '')
    {
        @SpanChain = 'Unknown';
    }
    @ImpactFlag = 1;
}
ReturnEvent(EventContainer);
log("TPR_event_enrichment: IQLOGFINISH: ServerSerial=" + @ServerSerial + " EventId=" + @EventId);
log("TPR_event_enrichment : stop "+EventContainer);
